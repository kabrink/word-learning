panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Social Robots (Subset)") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ag.ttest = t.test(WL1$AgIndex,mu=0)
exp.ttest = t.test(WL1$ExpIndex,mu=0)
summary(glm(Total~ExpIndex.cent+AgIndex.cent+Age.cent+Sex+Order,data=WL1))
pander(summary(lm(Total~ExpIndex.cent+AgIndex.cent+Age.cent+Sex+Order,data=WL1)))
lm.beta(glm(Total~ExpIndex.cent+AgIndex.cent+Age.cent+Sex+Order,data=WL1))
summary(glm(Total~AgIndex.cent+Age.cent,data=WL1))
#Agency
cor.test(WL1$Total,WL1$AgIndex)
AgencyTotal.Data = data.frame(Endorsement = WL1$Total, Agency = WL1$AgIndex)
ggplot(AgencyTotal.Data, aes(Agency,Endorsement)) +
geom_point(position = position_jitter(w = 0.05, h = 0.05), size=4) + #, color=wes_palette(n=5, name=wesanderson)[1]) +
geom_smooth(method=lm) + #, colour=wes_palette(n=5, name=wesanderson)[5], size=3) +
#scale_color_manual(values=wes_palette(n=1, name=wesanderson)) +
labs(y="Proportion of Correct Responses") +
theme(text = element_text(size=36,family="Helvetica",colour="black"),
axis.text.x = element_text(size=24,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=20,colour="black"),
axis.title.y=element_text(margin=margin(0,20,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
plot.margin = margin(10, 10, 10, 12))
source("~/Dropbox/Research/Michigan/Dissertation - Robots/Word Learning/Private/WL2_data.R")
#Clean the data set
#Subset the data set by condition (i.e., by the order in which the robots are presented and by which robot is accurate)
WL2.A <- subset(qualtrics.WL2, Condition==1 & AccurateRobot=='Purple')
WL2.B <- subset(qualtrics.WL2, Condition==2 & AccurateRobot=='Purple')
WL2.C <- subset(qualtrics.WL2, Condition==1 & AccurateRobot=='Orange')
WL2.D <- subset(qualtrics.WL2, Condition==2 & AccurateRobot=='Orange')
#Each condition of the survey has different question names for the same questions.
#Remove all unused variable names from each condition
WL2.A <- WL2.A[, c("ResponseID","StartDate","Finish","Assent","Condition","AccurateRobot","Subject","Sex","DOB","EXP","Fam1.A","Fam1.A_TEXT","Fam2.A","Fam2.A_TEXT","Fam3.A","Fam3.A_TEXT","Fam4.A","Fam4.A_TEXT","EJ1.A","Ask1A.AC","Ask1A.AC_TEXT","Ask1B.AC","Ask1C.AC","Ask2A.AC","Ask2A.AC_TEXT","Ask2B.AC","Ask2C.AC","Ask3A.AC","Ask3A.AC_TEXT","Ask3B.AC","Ask3C.AC","Ask4A.AC","Ask4A.AC_TEXT","Ask4B","Ask4C","EJ2.AC","WHYCHOOSE","WHY","CANDY","CHOOSE","THINK","MORAL","PAIN","FEELINGS","SCARED","HUNGRY","P.SEX","O.SEX","OLDER","Audio_File","Comments")]
WL2.B <- WL2.B[, c("ResponseID","StartDate","Finish","Assent","Condition","AccurateRobot","Subject","Sex","DOB","EXP","Fam1.B","Fam1.B_TEXT","Fam2.B","Fam2.B_TEXT","Fam3.B","Fam3.B_TEXT","Fam4.B","Fam4.B_TEXT","EJ1.B","Ask1A.BD","Ask1A.BD_TEXT","Ask1B.BD","Ask1C.BD","Ask2A.BD","Ask2A.BD_TEXT","Ask2B.Bd","Ask2C.BD","Ask3A.BD","Ask3A.BD_TEXT","Ask3B.BD","Ask3C.BD","Ask4A.BD","Ask4A.BD_TEXT","Ask4B.BD","Ask4C.BD","EJ2","WHYCHOOSE","WHY","CANDY","CHOOSE","THINK","MORAL","PAIN","FEELINGS","SCARED","HUNGRY","P.SEX","O.SEX","OLDER","Audio_File","Comments")]
WL2.C <- WL2.C[, c("ResponseID","StartDate","Finish","Assent","Condition","AccurateRobot","Subject","Sex","DOB","EXP","Fam1.C","Fam1.C_TEXT","Fam2.C","Fam2.C_TEXT","Fam3.C","Fam3.C_TEXT","Fam4.C","Fam4.C_TEXT","EJ1.C","Ask1A.AC","Ask1A.AC_TEXT","Ask1B.AC","Ask1C.AC","Ask2A.AC","Ask2A.AC_TEXT","Ask2B.AC","Ask2C.AC","Ask3A.AC","Ask3A.AC_TEXT","Ask3B.AC","Ask3C.AC","Ask4A.AC","Ask4A.AC_TEXT","Ask4B","Ask4C","EJ2.AC","WHYCHOOSE","WHY","CANDY","CHOOSE","THINK","MORAL","PAIN","FEELINGS","SCARED","HUNGRY","P.SEX","O.SEX","OLDER","Audio_File","Comments")]
WL2.D <- WL2.D[, c("ResponseID","StartDate","Finish","Assent","Condition","AccurateRobot","Subject","Sex","DOB","EXP","Fam1.D","Fam1.D_TEXT","Fam2.D","Fam2.D_TEXT","Fam3.D","Fam3.D_TEXT","Fam4.D","Fam4.D_TEXT","EJ1.D","Ask1A.BD","Ask1A.BD_TEXT","Ask1B.BD","Ask1C.BD","Ask2A.BD","Ask2A.BD_TEXT","Ask2B.Bd","Ask2C.BD","Ask3A.BD","Ask3A.BD_TEXT","Ask3B.BD","Ask3C.BD","Ask4A.BD","Ask4A.BD_TEXT","Ask4B.BD","Ask4C.BD","EJ2","WHYCHOOSE","WHY","CANDY","CHOOSE","THINK","MORAL","PAIN","FEELINGS","SCARED","HUNGRY","P.SEX","O.SEX","OLDER","Audio_File","Comments")]
#Rename all variables so that they have the same names across conditions
names(WL2.A) <- c("ResponseID","StartDate","Finish","Assent","Condition","AccurateRobot","Subject","Sex","DOB","EXP","Fam1","Fam1_TEXT","Fam2","Fam2_TEXT","Fam3","Fam3_TEXT","Fam4","Fam4_TEXT","EJ1","Ask1A","Ask1A_TEXT","Ask1B","Ask1C","Ask2A","Ask2A_TEXT","Ask2B","Ask2C","Ask3A","Ask3A_TEXT","Ask3B","Ask3C","Ask4A","Ask4A_TEXT","Ask4B","Ask4C","EJ2","WHYCHOOSE","WHY","CANDY","CHOOSE","THINK","MORAL","PAIN","FEELINGS","SCARED","HUNGRY","P.SEX","O.SEX","OLDER","Audio_file","Comments")
names(WL2.B) <- c("ResponseID","StartDate","Finish","Assent","Condition","AccurateRobot","Subject","Sex","DOB","EXP","Fam1","Fam1_TEXT","Fam2","Fam2_TEXT","Fam3","Fam3_TEXT","Fam4","Fam4_TEXT","EJ1","Ask1A","Ask1A_TEXT","Ask1B","Ask1C","Ask2A","Ask2A_TEXT","Ask2B","Ask2C","Ask3A","Ask3A_TEXT","Ask3B","Ask3C","Ask4A","Ask4A_TEXT","Ask4B","Ask4C","EJ2","WHYCHOOSE","WHY","CANDY","CHOOSE","THINK","MORAL","PAIN","FEELINGS","SCARED","HUNGRY","P.SEX","O.SEX","OLDER","Audio_file","Comments")
names(WL2.C) <- c("ResponseID","StartDate","Finish","Assent","Condition","AccurateRobot","Subject","Sex","DOB","EXP","Fam1","Fam1_TEXT","Fam2","Fam2_TEXT","Fam3","Fam3_TEXT","Fam4","Fam4_TEXT","EJ1","Ask1A","Ask1A_TEXT","Ask1B","Ask1C","Ask2A","Ask2A_TEXT","Ask2B","Ask2C","Ask3A","Ask3A_TEXT","Ask3B","Ask3C","Ask4A","Ask4A_TEXT","Ask4B","Ask4C","EJ2","WHYCHOOSE","WHY","CANDY","CHOOSE","THINK","MORAL","PAIN","FEELINGS","SCARED","HUNGRY","P.SEX","O.SEX","OLDER","Audio_file","Comments")
names(WL2.D) <- c("ResponseID","StartDate","Finish","Assent","Condition","AccurateRobot","Subject","Sex","DOB","EXP","Fam1","Fam1_TEXT","Fam2","Fam2_TEXT","Fam3","Fam3_TEXT","Fam4","Fam4_TEXT","EJ1","Ask1A","Ask1A_TEXT","Ask1B","Ask1C","Ask2A","Ask2A_TEXT","Ask2B","Ask2C","Ask3A","Ask3A_TEXT","Ask3B","Ask3C","Ask4A","Ask4A_TEXT","Ask4B","Ask4C","EJ2","WHYCHOOSE","WHY","CANDY","CHOOSE","THINK","MORAL","PAIN","FEELINGS","SCARED","HUNGRY","P.SEX","O.SEX","OLDER","Audio_file","Comments")
#Add a new variable to each data set which contains the condition name for each participant
WL2.A$Order = "A"
WL2.B$Order = "B"
WL2.C$Order = "C"
WL2.D$Order = "D"
#Combine all data into one dataset
WL2 <- rbind(WL2.A,WL2.B,WL2.C,WL2.D)
#Set all missing values to NA
WL2[ WL2 == "" ] = NA
WL2[ WL2 == -99 ] = NA
#Convert categorical variables to factors
WL2$AccurateRobot = factor(WL2$AccurateRobot)
WL2$EJ1 = factor(WL2$EJ1)
WL2$EJ2 = factor(WL2$EJ2)
WL2$Ask1B = factor(WL2$Ask1B)
WL2$Ask2B = factor(WL2$Ask2B)
WL2$Ask3B = factor(WL2$Ask3B)
WL2$Ask4B = factor(WL2$Ask4B)
WL2$Ask1C = factor(WL2$Ask1C)
WL2$Ask2C = factor(WL2$Ask1C)
WL2$Ask3C = factor(WL2$Ask3C)
WL2$Ask4C = factor(WL2$Ask4C)
#Convert date variables to a format that can be processed by R
WL2$DOB = mdy(WL2$DOB)
WL2$DOT = as.Date(WL2$StartDate)
#Calculate the age of each participant in months
WL2$Age = year(as.period(interval(WL2$DOB, WL2$DOT)))*12 + month(as.period(interval(WL2$DOB, WL2$DOT))) + day(as.period(interval(WL2$DOB, WL2$DOT)))/30
WL2$AgeYears = WL2$Age/12
#Calculate whether children accurately answered all familiarization trials.
WL2$Fam.Match = ifelse(WL2$Fam1=="Brush",1,0) + ifelse(WL2$Fam2=="Doll",1,0) + ifelse(WL2$Fam3=="Ball",1,0) + ifelse(WL2$Fam4=="Bear",1,0)
#Calculate the proportion of answers where children accurately determined which robot was bad at naming the familiar objects
WL2$EJ1.Match = ifelse(WL2$EJ1!=WL2$AccurateRobot,1,0)
WL2$EJ2.Match = ifelse(WL2$EJ2!=WL2$AccurateRobot,1,0)
WL2$EJ.Match = rowMeans(WL2[c('EJ1.Match','EJ2.Match')],na.rm=T)
WL2$EJ.Match[is.nan(WL2$EJ.Match)]=NA
WL2$EJ1.Purple = ifelse(WL2$EJ1!="Purple",1,0)
WL2$EJ2.Purple = ifelse(WL2$EJ2!="Purple",1,0)
WL2$EJ.Purple = rowMeans(WL2[c('EJ1.Purple','EJ2.Purple')],na.rm=T)
WL2$EJ.Purple[is.nan(WL2$EJ.Purple)]=NA
WL2$EJ1.Orange = ifelse(WL2$EJ1!="Orange",1,0)
WL2$EJ2.Orange = ifelse(WL2$EJ2!="Orange",1,0)
WL2$EJ.Orange = rowMeans(WL2[c('EJ1.Orange','EJ2.Orange')],na.rm=T)
WL2$EJ.Orange[is.nan(WL2$EJ.Orange)]=NA
#Calculate the proportion of answers where children said they would ask the accurate robot for the name of the novel object
WL2$Ask1B.Match = ifelse(WL2$Ask1B==WL2$AccurateRobot,1,0)
WL2$Ask2B.Match = ifelse(WL2$Ask2B==WL2$AccurateRobot,1,0)
WL2$Ask3B.Match = ifelse(WL2$Ask3B==WL2$AccurateRobot,1,0)
WL2$Ask4B.Match = ifelse(WL2$Ask4B==WL2$AccurateRobot,1,0)
WL2$Ask.Match = rowMeans(WL2[c('Ask1B.Match','Ask2B.Match','Ask3B.Match','Ask4B.Match')],na.rm=T)
WL2$Ask.Match[is.nan(WL2$Ask.Match)]=NA
WL2$Ask1B.Purple = ifelse(WL2$Ask1B=='Purple',1,0)
WL2$Ask2B.Purple = ifelse(WL2$Ask2B=='Purple',1,0)
WL2$Ask3B.Purple = ifelse(WL2$Ask3B=='Purple',1,0)
WL2$Ask4B.Purple = ifelse(WL2$Ask4B=='Purple',1,0)
WL2$Ask.Purple = rowMeans(WL2[c('Ask1B.Purple','Ask2B.Purple','Ask3B.Purple','Ask4B.Purple')],na.rm=T)
WL2$Ask.Purple[is.nan(WL2$Ask.Purple)]=NA
WL2$Ask1B.Orange = ifelse(WL2$Ask1B=='Orange',1,0)
WL2$Ask2B.Orange = ifelse(WL2$Ask2B=='Orange',1,0)
WL2$Ask3B.Orange = ifelse(WL2$Ask3B=='Orange',1,0)
WL2$Ask4B.Orange = ifelse(WL2$Ask4B=='Orange',1,0)
WL2$Ask.Orange = rowMeans(WL2[c('Ask1B.Orange','Ask2B.Orange','Ask3B.Orange','Ask4B.Orange')],na.rm=T)
WL2$Ask.Orange[is.nan(WL2$Ask.Orange)]=NA
WL2$Ask.bin = factor(ifelse(WL2$Ask.Match <= mean(WL2$Ask.Match,na.rm=T), 0, 1))
#Calculate the proportion of answers where children chose the same name that the accurate robot chose
WL2$Ask1C.Match = ifelse(WL2$Ask1C==WL2$AccurateRobot,1,0)
WL2$Ask2C.Match = ifelse(WL2$Ask2C==WL2$AccurateRobot,1,0)
WL2$Ask3C.Match = ifelse(WL2$Ask3C==WL2$AccurateRobot,1,0)
WL2$Ask4C.Match = ifelse(WL2$Ask4C==WL2$AccurateRobot,1,0)
WL2$Word.Match = rowMeans(WL2[c('Ask1C.Match','Ask2C.Match','Ask3C.Match','Ask4C.Match')],na.rm=T)
WL2$Word.Match[is.nan(WL2$Ask.Match)]=NA
WL2$Ask1C.Purple = ifelse(WL2$Ask1C=='Purple',1,0)
WL2$Ask2C.Purple = ifelse(WL2$Ask2C=='Purple',1,0)
WL2$Ask3C.Purple = ifelse(WL2$Ask3C=='Purple',1,0)
WL2$Ask4C.Purple = ifelse(WL2$Ask4C=='Purple',1,0)
WL2$Word.Purple = rowMeans(WL2[c('Ask1C.Purple','Ask2C.Purple','Ask3C.Purple','Ask4C.Purple')],na.rm=T)
WL2$Word.Purple[is.nan(WL2$Ask.Purple)]=NA
WL2$Ask1C.Orange = ifelse(WL2$Ask1C=='Orange',1,0)
WL2$Ask2C.Orange = ifelse(WL2$Ask2C=='Orange',1,0)
WL2$Ask3C.Orange = ifelse(WL2$Ask3C=='Orange',1,0)
WL2$Ask4C.Orange = ifelse(WL2$Ask4C=='Orange',1,0)
WL2$Word.Orange = rowMeans(WL2[c('Ask1C.Orange','Ask2C.Orange','Ask3C.Orange','Ask4C.Orange')],na.rm=T)
WL2$Word.Orange[is.nan(WL2$Ask.Orange)]=NA
WL2$Word.bin = factor(ifelse(WL2$Word.Match <= mean(WL2$Word.Match,na.rm=T), 0, 1))
WL2$Total = rowMeans(WL2[c('EJ1.Match','EJ2.Match','Ask1B.Match','Ask2B.Match','Ask3B.Match','Ask4B.Match','Ask1C.Orange','Ask2C.Orange','Ask3C.Orange','Ask4C.Orange')],na.rm=T)
WL2$Total.red = rowMeans(WL2[c('Ask1B.Match','Ask2B.Match','Ask3B.Match','Ask4B.Match','Ask1C.Orange','Ask2C.Orange','Ask3C.Orange','Ask4C.Orange')],na.rm=T)
WL2$Total.bin = factor(ifelse(WL2$Total <= mean(WL2$Total,na.rm=T), 0, 1))
#Recode perceptions of agency and experience questions
WL2$THINK.score = ifelse(WL2$THINK=="No",0,ifelse(WL2$THINK=="A little bit",1,ifelse(WL2$THINK=="A medium amount",2,ifelse(WL2$THINK=="A lot",3,NA))))
WL2$MORAL.score = ifelse(WL2$MORAL=="No",0,ifelse(WL2$MORAL=="A little bit",1,ifelse(WL2$MORAL=="A medium amount",2,ifelse(WL2$MORAL=="A lot",3,NA))))
WL2$CHOOSE.score = ifelse(WL2$CHOOSE=="No",0,ifelse(WL2$CHOOSE=="A few things",1,ifelse(WL2$CHOOSE=="A medium amount of things",2,ifelse(WL2$CHOOSE=="A lot of things",3,NA))))
WL2$PAIN.score = ifelse(WL2$PAIN=="No",0,ifelse(WL2$PAIN=="A little bit",1,ifelse(WL2$PAIN=="A medium amount",2,ifelse(WL2$PAIN=="A lot",3,NA))))
WL2$SCARED.score = ifelse(WL2$SCARED=="No",0,ifelse(WL2$SCARED=="A little bit",1,ifelse(WL2$SCARED=="A medium amount",2,ifelse(WL2$SCARED=="A lot",3,NA))))
WL2$HUNGRY.score = ifelse(WL2$HUNGRY=="No",0,ifelse(WL2$HUNGRY=="A little bit",1,ifelse(WL2$HUNGRY=="A medium amount",2,ifelse(WL2$HUNGRY=="A lot",3,NA))))
#Calculate aggregates of children's perceptions of the robots' agency and experience
WL2$AgIndex = (WL2$THINK.score + WL2$MORAL.score + WL2$CHOOSE.score)/3
WL2$ExpIndex = (WL2$PAIN.score + WL2$SCARED.score + WL2$HUNGRY.score)/3
WL2$MindIndex = (WL2$PAIN.score + WL2$SCARED.score + WL2$HUNGRY.score+WL2$THINK.score + WL2$MORAL.score + WL2$CHOOSE.score)/6
WL2$AgIndex.cent = scale(WL2$AgIndex,center=T,scale=T)
WL2$ExpIndex.cent = scale(WL2$ExpIndex,center=T,scale=T)
WL2$Age.cent = scale(WL2$Age,center=T,scale=T)
WL2$MindIndex.cent = scale(WL2$MindIndex,center=T,scale=T)
WL2 = WL2[!is.na(WL2$Fam.Match),]
WL2 = WL2[WL2$Subject!="Test",]
WL2 = WL2[WL2$Subject!="Test2",]
WL2 = WL2[!is.na(WL2$Subject),]
#correction
WL2$Sex[grepl("The child is a girl, accidentally put that she was a boy",WL2$Comments)] = "Female"
filename <- "/Volumes/lsa-research01/ALL STUDIES/Current Studies/Word Learning/2.0/Data/WL2 - Demographics.csv"
WL2_demo = read.csv(filename)
num_subs = dim(WL2)[1]
#parent interference
WL2 = WL2[!grepl("Parent intereference",WL2$Comments),]
num_subs = dim(WL2)[1]
#non-native english speaker
WL2 = WL2[!grepl("Answered in foreign language. Very shy.",WL2$Comments),]
num_subs = dim(WL2)[1]
#ended early
WL2 = WL2[!grepl("They arrived 20 minutes late and the mother tried to rush the entire interview. Had to end early because the interview was taking too long for the mother's liking",WL2$Comments),]
WL2 = WL2[!grepl("Participant not focused at all, may have had a developmental disability",WL2$Comments),]
#WL2 = WL2[WL2$Finish=="Finished the study normally",]
WL2_demo_a = WL2_demo[(WL2_demo$SubID %in% WL2$Subject),]
pander(summary(WL2_demo_a$Race_Ethnicity_Baby))
#report how many participants completed each order of the survey
pander(table(WL2$Order),caption = 'Distribution by Order of Presentation')
#report summary statistics for performance during familiarization/accuracy trials
pander(table(WL2$Fam.Match),caption='Participant Count by Number of Trials Correct')
#Remove all participants that failed to correctly answer all four familiarization trials
WL2 = WL2[which(WL2$Fam.Match==4),]
#WL2 = WL2[which(WL2$EJ1.Match==1),]
pander(table(WL2$Order),caption = 'Distribution by Order of Presentation after removing for familiarization')
#Compare performance to chance guessing
EJ.ttest = t.test(WL2$EJ1.Match,mu=.5) # Ho: mu=0.5
Ask.ttest = t.test(WL2$Ask.Match,mu=.5)
Word.ttest = t.test(WL2$Word.Match,mu=.5)
chance.table = data.frame(Question = c('Explicit judgment','Ask','Endorse'),
Proportion = c(
paste(round(EJ.ttest$estimate,2),
' (',round(std.error(WL2$EJ.Match),2),')',sep=''),
paste(round(Ask.ttest$estimate,2),
' (',round(std.error(WL2$Ask.Match),2),')',sep=''),
paste(round(Word.ttest$estimate,2),
' (',round(std.error(WL2$Word.Match),2),')',sep='')),
't(df)' = c(
paste("t(",round(EJ.ttest$parameter,2),")=",
round(EJ.ttest$statistic,2),sep=''),
paste("t(",round(Ask.ttest$parameter,2),")=",
round(Ask.ttest$statistic,2),sep=''),
paste("t(",round(Word.ttest$parameter,2),")=",
round(Word.ttest$statistic,2),sep='')),
'p' = c(paste(round(EJ.ttest$p.value,4)),
paste(round(Ask.ttest$p.value,4)),
paste(round(Word.ttest$p.value,4))),
'95%CI' = c(paste(round(EJ.ttest$conf.int[1],2),
round(EJ.ttest$conf.int[2],2),sep=","),
paste(round(Ask.ttest$conf.int[1],2),
round(Ask.ttest$conf.int[2],2),sep=","),
paste(round(Word.ttest$conf.int[1],2),
round(Word.ttest$conf.int[2],2),sep=","))
)
pander(chance.table,style = 'rmarkdown')
WL2.perf = WL2[c("EJ1.Match","Ask.Match","Word.Match","Subject")]
names(WL2.perf) = c("Judgment","Ask","Endorse","Participant")
perf = melt(WL2.perf,id='Participant')
names(perf) = c("Participant","Question Type","Proportion")
performance <- aggregate(perf$Proportion,
by = list("Question Type" = perf$`Question Type`),
FUN = function(x) c(mean = mean(x,na.rm=T), sd = sd(x,na.rm=T), n = length(x)))
performance <- do.call(data.frame, performance)
performance$CI <- qt(0.975,df=performance$x.n-1)*performance$x.sd/sqrt(performance$x.n)
performance = performance[c("Question.Type","x.mean","CI")]
names(performance) = c("Question Type","Proportion","CI")
write.csv(performance, file = "~/Dropbox/Research/Michigan/Dissertation - Robots/Presentations/Job Talk/WL Machine Data.csv")
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, fill = `Question Type`)) +
guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.65)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
WL2.EJ1 = WL2[which(WL2$EJ1.Match==1),]
Ask.ttest = t.test(WL2.EJ1$Ask.Match,mu=.5)
Word.ttest = t.test(WL2.EJ1$Word.Match,mu=.5)
chance.table = data.frame(Question = c('Ask','Endorse'),
Proportion = c(
paste(round(Ask.ttest$estimate,2),
' (',round(std.error(WL1$Ask.Match),2),')',sep=''),
paste(round(Word.ttest$estimate,2),
' (',round(std.error(WL1$Word.Match),2),')',sep='')),
't(df)' = c(
paste("t(",round(Ask.ttest$parameter,2),")=",
round(Ask.ttest$statistic,2),sep=''),
paste("t(",round(Word.ttest$parameter,2),")=",
round(Word.ttest$statistic,2),sep='')),
'p' = c(paste(round(Ask.ttest$p.value,4)),
paste(round(Word.ttest$p.value,4))),
'95%CI' = c(paste(round(Ask.ttest$conf.int[1],2),
round(Ask.ttest$conf.int[2],2),sep=","),
paste(round(Word.ttest$conf.int[1],2),
round(Word.ttest$conf.int[2],2),sep=","))
)
pander(chance.table,style = 'rmarkdown')
WL2sub.perf = WL2.EJ1[c("EJ1.Match","Ask.Match","Word.Match","Subject")]
names(WL2sub.perf) = c("Judgment","Ask","Endorse","Participant")
perf = melt(WL2sub.perf,id='Participant')
names(perf) = c("Participant","Question Type","Proportion")
performance.sub <- aggregate(perf$Proportion,
by = list("Question Type" = perf$`Question Type`),
FUN = function(x) c(mean = mean(x,na.rm=T), sd = sd(x,na.rm=T), n = length(x)))
performance.sub <- do.call(data.frame, performance.sub)
performance.sub$CI <- qt(0.975,df=performance.sub$x.n-1)*performance.sub$x.sd/sqrt(performance.sub$x.n)
performance.sub = performance.sub[c("Question.Type","x.mean","CI")]
names(performance.sub) = c("Question Type","Proportion","CI")
write.csv(performance.sub, file = "~/Dropbox/Research/Michigan/Dissertation - Robots/Presentations/Job Talk/WL Machine Data Subset.csv")
performance.sub$Sample = "Subset"
performance$Sample ="Full"
performance = rbind(performance,performance.sub)
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = `Question Type`, fill = Sample)) +
#guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
panel.grid.major = element_blank(),
panel.background = element_blank(),
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = `Question Type`, fill = Sample)) +
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = `Question Type`, fill = Sample)) +
#guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
size = 1.5, # Width of the error bars
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
panel.grid.major = element_blank(),
panel.background = element_blank(),
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = `Question Type`, fill = Sample)) +
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, fill = Sample)) +
#guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.5)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = `Question Type`, fill = Sample)) +
#guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.5)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = Sample, fill = `Question Type`)) +
#guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.5)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = Sample, fill = `Question Type`)) +
guides(fill=Sample) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.5)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = Sample, fill = `Question Type`)) +
guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.5)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = Sample, fill = `Question Type`)) +
guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(.1), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.5)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = Sample, fill = `Question Type`)) +
guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(1.1), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.5)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = Sample, fill = `Question Type`)) +
guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(.5), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.5)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = Sample, fill = `Question Type`)) +
guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(.65), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1.5, # Width of the error bars
position=position_dodge(.65)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
ggplot(data = performance, aes(x = `Question Type`, y = Proportion, group = Sample, fill = `Question Type`)) +
guides(fill=FALSE) +
scale_fill_manual(values=wes_palette(n=3, name=wesanderson)) +
geom_bar(width = .5, position=position_dodge(.65), stat="identity") +
geom_errorbar(aes(ymin=performance$Proportion-performance$CI, ymax=performance$Proportion+performance$CI),
width=.1,
size = 1, # Width of the error bars
position=position_dodge(.65)) +
theme(text = element_text(size=12,family="Helvetica",colour="black"),
axis.text.x = element_text(size=11,colour="black"),
axis.title.x = element_text(vjust=0.1,colour="black"),
axis.text.y=element_text(angle=90, hjust=.5, size=10,colour="black"),
axis.title.y=element_text(margin=margin(0,10,0,0),colour="black"),
plot.background = element_rect(fill = "transparent", colour = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
labs(y="Proportion of Correct Responses", title = "Inanimate Machines") +
geom_hline(aes(yintercept=.5),size=1,linetype="dashed") +
scale_y_continuous(expand = c(0, 0), breaks=c(0,.25,.5,.75,1), limits=c(0,1.05))
